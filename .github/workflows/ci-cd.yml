name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Job de validación
  validate:
    name: 🔍 Validar Proyecto
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Instalar dependencias
        run: npm ci
        
      - name: 🚪 Ejecutar GATES - Estructura
        run: npm run gate:dir
        
      - name: 🚪 Ejecutar GATES - Variables de entorno
        run: npm run gate:env || echo "⚠️ Variables de entorno no configuradas, continuando..."
        env:
          VITE_CLARITY_PROJECT_ID: ${{ secrets.CLARITY_PROJECT_ID || 'demo_project_id' }}
          VITE_N8N_FEEDBACK_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL || 'https://demo-webhook.com/feedback' }}
          
      - name: 🚪 Ejecutar GATES - Componentes
        run: npm run gate:components || echo "⚠️ Gate de componentes falló, continuando..."
        
      - name: 🚪 Ejecutar GATES - Deploy
        run: npm run gate:deployment || echo "⚠️ Gate de deploy falló, continuando..."
        
      - name: 🏗️ Construir proyecto
        run: npm run build
        
      - name: 📊 Verificar build
        run: |
          echo "Verificando que dist/ se creó..."
          ls -la dist/
          echo "Verificando archivos principales..."
          ls -la dist/ | grep -E "\.(html|js|css)$"
          
      - name: 🧪 Test de componentes
        run: |
          echo "Verificando que los componentes existen..."
          test -f components/onboarding/onboarding.js || exit 1
          test -f components/clarity/clarity.js || exit 1
          test -f components/feedback/feedback.js || exit 1
          echo "✅ Todos los componentes encontrados"

  # Job de deploy a Vercel
  deploy-vercel:
    name: 🚀 Deploy a Vercel
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Instalar dependencias
        run: npm ci
        
      - name: 🏗️ Construir proyecto
        run: npm run build
        
      - name: 🚀 Deploy a Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
        env:
          VITE_CLARITY_PROJECT_ID: ${{ secrets.CLARITY_PROJECT_ID }}
          VITE_N8N_FEEDBACK_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL }}

  # Job de deploy a Render
  deploy-render:
    name: 🚀 Deploy a Render
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Instalar dependencias
        run: npm ci
        
      - name: 🏗️ Construir proyecto
        run: npm run build
        
      - name: 🚀 Deploy a Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
        env:
          VITE_CLARITY_PROJECT_ID: ${{ secrets.CLARITY_PROJECT_ID }}
          VITE_N8N_FEEDBACK_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL }}

  # Job de deploy a GitHub Pages
  deploy-pages:
    name: 🚀 Deploy a GitHub Pages
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Instalar dependencias
        run: npm ci
        
      - name: 🏗️ Construir proyecto
        run: npm run build
        env:
          VITE_CLARITY_PROJECT_ID: ${{ secrets.CLARITY_PROJECT_ID }}
          VITE_N8N_FEEDBACK_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL }}
          
      - name: 🚀 Deploy a GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          cname: ${{ secrets.CUSTOM_DOMAIN }}

  # Job de notificaciones
  notify:
    name: 📢 Notificaciones
    runs-on: ubuntu-latest
    needs: [validate, deploy-vercel, deploy-render, deploy-pages]
    if: always()
    
    steps:
      - name: 📊 Resumen del deploy
        run: |
          echo "## 🚀 Deploy Status" >> $GITHUB_STEP_SUMMARY
          echo "| Plataforma | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Validación | ${{ needs.validate.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Vercel | ${{ needs.deploy-vercel.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Render | ${{ needs.deploy-render.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| GitHub Pages | ${{ needs.deploy-pages.result }} |" >> $GITHUB_STEP_SUMMARY
          
      - name: 🎉 Deploy exitoso
        if: needs.validate.result == 'success'
        run: |
          echo "✅ Deploy completado exitosamente"
          echo "🔗 URLs disponibles:"
          echo "- Vercel: https://tu-proyecto.vercel.app"
          echo "- Render: https://tu-proyecto.onrender.com"
          echo "- GitHub Pages: https://tu-usuario.github.io/tu-repositorio"
          
      - name: ❌ Deploy falló
        if: needs.validate.result == 'failure'
        run: |
          echo "❌ Deploy falló"
          echo "Revisa los logs para más detalles"
